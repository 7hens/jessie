import com.android.tools.r8.D8

def shell = { String cmd ->
    println "\$ $cmd"
    def process = cmd.execute()
    def thread = { runnable -> new Thread(runnable).start() }
    thread { process.inputStream.eachLine { println ">> $it" } }
    thread { process.errorStream.eachLine { System.err.println ">> $it" } }
    process.waitForOrKill(10000)
}

def makeDex = { File input, File output ->
    output.parentFile.mkdirs()
    output.delete()

    def androidHome = android.sdkDirectory
    def dexHome = new File(androidHome, "build-tools").listFiles().sort().last()
    def dex = new File(dexHome, "d8.bat")
    if (!dex.exists()) dex = new File(dexHome, "d8")

    def args = [input.absolutePath, "--lib"]
    android.bootClasspath.forEach { args.add(it.absolutePath) }

    D8.main([input.absolutePath, "--lib", android.bootClasspath])
    shell "$dex --output=$output $input"
}

def androidHookInput = file("android-hook/build/intermediates/aar_main_jar/debug/classes.jar")
def androidHookOutput = file("src/main/assets/jessie/android-hook.jar")
task upgradeHook {
    group 'jessie'
    dependsOn rootProject.tasks.findByPath(":jessie:android-hook:assembleDebug")
    doLast { makeDex(androidHookInput, androidHookOutput) }
}

def jessieRuntimeInput=  file("runtime/build/intermediates/aar_main_jar/debug/classes.jar")
def jessieRuntimeOutput = file("src/main/assets/jessie/jessie-runtime.jar")
task upgradeRuntime {
    group 'jessie'
    dependsOn rootProject.tasks.findByPath(":jessie:runtime:assembleDebug")
    doLast { makeDex(jessieRuntimeInput, jessieRuntimeOutput) }
}

afterEvaluate {
    if (!androidHookOutput.exists()) {
        tasks.preBuild.dependsOn upgradeHook
    }
    if (!jessieRuntimeOutput.exists()) {
        tasks.assembleDebug.dependsOn upgradeRuntime
    }


    rootProject.project(":jessie:runtime").afterEvaluate {

    }
}
